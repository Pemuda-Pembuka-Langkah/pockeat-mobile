name: SonarCloud Analysis
on:
  push:
    branches:
      - '**'  # Runs on all branches
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.0'
          channel: 'stable'
          cache: true
          
      - name: Create .env file
        run: |
          echo "FLAVOR=staging" > .env
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" >> .env
          echo "STAGING_FIREBASE_PROJECT_ID=${{ secrets.STAGING_FIREBASE_PROJECT_ID }}" >> .env
          echo "STAGING_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.STAGING_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "STAGING_FIREBASE_STORAGE_BUCKET=${{ secrets.STAGING_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "STAGING_FIREBASE_ANDROID_APP_ID=${{ secrets.STAGING_FIREBASE_ANDROID_APP_ID }}" >> .env
          echo "STAGING_FIREBASE_ANDROID_API_KEY=${{ secrets.STAGING_FIREBASE_ANDROID_API_KEY }}" >> .env
          echo "STAGING_FIREBASE_IOS_APP_ID=${{ secrets.STAGING_FIREBASE_IOS_APP_ID }}" >> .env
          echo "STAGING_FIREBASE_IOS_API_KEY=${{ secrets.STAGING_FIREBASE_IOS_API_KEY }}" >> .env
          echo "STAGING_FIREBASE_IOS_BUNDLE_ID=${{ secrets.STAGING_FIREBASE_IOS_BUNDLE_ID }}" >> .env
          echo "STAGING_FIREBASE_WEB_APP_ID=${{ secrets.STAGING_FIREBASE_WEB_APP_ID }}" >> .env
          echo "STAGING_FIREBASE_WEB_API_KEY=${{ secrets.STAGING_FIREBASE_WEB_API_KEY }}" >> .env
          echo "STAGING_FIREBASE_AUTH_DOMAIN=${{ secrets.STAGING_FIREBASE_AUTH_DOMAIN }}" >> .env

      - name: Install dependencies
        run: flutter pub get
        
      - name: Generate mocks with build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Run tests with coverage
        run: flutter test --coverage

      - name: Create sonar-project.properties
        run: |
          echo "sonar.projectKey=Pemuda-Pembuka-Langkah_pockeat-mobile" > sonar-project.properties
          echo "sonar.organization=pemuda-pembuka-langkah" >> sonar-project.properties
          echo "sonar.sources=lib" >> sonar-project.properties
          echo "sonar.tests=test" >> sonar-project.properties
          echo "sonar.dart.coverage.reportPaths=coverage/lcov.info" >> sonar-project.properties
          echo "sonar.sourceEncoding=UTF-8" >> sonar-project.properties
          echo "sonar.exclusions=**/*.g.dart,**/*.freezed.dart,**/generated_plugin_registrant.dart,**/l10n/**,**/*.config.dart,**/*.pb.dart,**/*.pb.*.dart" >> sonar-project.properties
          echo "sonar.coverage.exclusions=**/*.g.dart,**/*.freezed.dart,**/generated_plugin_registrant.dart,**/l10n/**,**/*.config.dart,**/*.pb.dart,**/*.pb.*.dart" >> sonar-project.properties
          echo "sonar.inclusions=lib/**/*" >> sonar-project.properties

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
