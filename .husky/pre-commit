#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

echo "Running pre-commit checks on entire codebase..."

# Store the list of staged files to ensure we only add back what was staged
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep "\.dart$" || true)
if [ -z "$STAGED_FILES" ]; then
  echo "No Dart files are staged. Skipping pre-commit hooks for Dart."
  exit 0
fi

# Save current changes to stash
echo "\n📦 Stashing unstaged changes..."
HAS_UNSTAGED=$(git diff --name-only)
if [ -n "$HAS_UNSTAGED" ]; then
  git stash push --keep-index --include-untracked
  STASHED=$?
fi

trap cleanup EXIT

cleanup() {
  # Restore changes from stash if we stashed anything
  if [ -n "$HAS_UNSTAGED" ] && [ "$STASHED" -eq 0 ]; then
    echo "\n📦 Restoring stashed changes..."
    git stash pop -q
  fi
}

echo "\n🔍 Step 1/5: Fixing lints automatically..."
echo "Applying dart fix to codebase..."
dart fix --apply lib

echo "\n🔍 Step 2/5: Formatting code..."
dart format lib

echo "\n🔍 Step 3/5: Sorting imports..."
dart run import_sorter:main

# Stage the changes made by the tools
echo "\n📥 Updating staged files..."
for FILE in $STAGED_FILES; do
  if [ -f "$FILE" ]; then
    git add "$FILE"
  fi
done

echo "\n🔍 Step 4/4: Analyzing code..."
if ! dart analyze lib --fatal-infos --fatal-warnings; then
  echo "❌ Analysis failed - Please fix remaining errors before committing"
  exit 1
fi
echo "✅ Analysis successful"
